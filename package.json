{
  "name": "ev-server",
  "version": "2.3.6",
  "engines": {
    "node": "12.x.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/LucasBrazi06/ev-server.git"
  },
  "license": "Apache-2.0",
  "licenses": [
    {
      "type": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "description": "Backend for Electric Vehicle charging station",
  "author": "SAP E-Mobility Labs France <e-mobility@sap.com>",
  "homepage": "https://github.com/LucasBrazi06/ev-server",
  "main": "dist/start.js",
  "dependencies": {
    "ajv": "^6.12.5",
    "ajv-sanitizer": "^1.1.4",
    "axios": "^0.20.0",
    "axios-retry": "^3.1.8",
    "basic-auth": "^2.0.1",
    "bcryptjs": "^2.4.3",
    "bluebird": "^3.7.2",
    "body-parser": "^1.19.0",
    "body-parser-xml": "^1.1.0",
    "cf-nodejs-logging-support": "^5.3.2",
    "cfenv": "^1.2.3",
    "cors": "^2.8.5",
    "ejs": "^2.7.4",
    "emailjs": "^2.2.0",
    "express": "^4.17.1",
    "express-sanitizer": "^1.0.5",
    "firebase-admin": "^8.13.0",
    "helmet": "^4.1.1",
    "hpp": "^0.2.3",
    "http-status-codes": "^2.1.3",
    "i18n-js": "^3.7.1",
    "intl": "^1.2.5",
    "jsonwebtoken": "^8.5.1",
    "jwt-decode": "^2.2.0",
    "locale": "^0.1.0",
    "lodash": "^4.17.20",
    "moment": "^2.28.0",
    "moment-duration-format": "^2.3.2",
    "moment-timezone": "^0.5.31",
    "mongo-sanitize": "^1.1.0",
    "mongo-uri-builder": "^3.2.2",
    "mongodb": "^3.6.2",
    "morgan": "^1.10.0",
    "mustache": "^4.0.1",
    "node-cron": "^2.0.3",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "password-generator": "^2.3.2",
    "role-acl": "^3.3.7",
    "simple-odata-server": "^1.1.1",
    "socket.io": "^2.3.0",
    "socketio-jwt": "^4.6.2",
    "source-map-support": "^0.5.19",
    "stripe": "^7.15.0",
    "strong-soap": "^1.22.1",
    "tslib": "^2.0.1",
    "tz-lookup": "^6.1.25",
    "urlencode": "^1.1.0",
    "uuid": "^8.3.0",
    "validator": "^13.1.1",
    "ws": "^7.3.1"
  },
  "devDependencies": {
    "@types/basic-auth": "^1.1.3",
    "@types/bcryptjs": "^2.4.2",
    "@types/bluebird": "^3.5.32",
    "@types/bluebird-global": "^3.5.12",
    "@types/body-parser": "^1.19.0",
    "@types/body-parser-xml": "^1.1.0",
    "@types/chai": "^4.2.12",
    "@types/chai-datetime": "0.0.33",
    "@types/chai-subset": "^1.3.3",
    "@types/convict": "^5.2.1",
    "@types/cors": "^2.8.7",
    "@types/ejs": "^2.7.0",
    "@types/express": "^4.17.8",
    "@types/faker": "^4.1.12",
    "@types/helmet": "0.0.48",
    "@types/hpp": "^0.2.1",
    "@types/i18n-js": "^3.0.3",
    "@types/intl": "^1.2.0",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/jwt-decode": "^2.2.1",
    "@types/lodash": "^4.14.161",
    "@types/mocha": "^7.0.2",
    "@types/moment-duration-format": "^2.2.2",
    "@types/moment-timezone": "^0.5.30",
    "@types/mongo-sanitize": "^1.0.1",
    "@types/mongodb": "^3.5.27",
    "@types/morgan": "^1.9.1",
    "@types/mustache": "^4.0.1",
    "@types/node": "^14.10.1",
    "@types/node-cron": "^2.0.3",
    "@types/passport": "^1.0.4",
    "@types/passport-jwt": "^3.0.3",
    "@types/rosie": "0.0.38",
    "@types/socket.io": "^2.1.11",
    "@types/socketio-jwt": "^0.2.0",
    "@types/stripe": "^7.13.24",
    "@types/tz-lookup": "^6.1.0",
    "@types/urlencode": "^1.1.2",
    "@types/uuid": "^8.3.0",
    "@types/validator": "^13.1.0",
    "@types/ws": "^7.2.6",
    "@typescript-eslint/eslint-plugin": "^4.1.0",
    "@typescript-eslint/parser": "^4.1.0",
    "chai": "^4.2.0",
    "chai-datetime": "^1.7.0",
    "chai-subset": "^1.6.0",
    "clean-webpack-plugin": "^3.0.0",
    "clinic": "^7.0.0",
    "convict": "^6.0.0",
    "copy-webpack-plugin": "^6.1.0",
    "cross-env": "^7.0.2",
    "eslint": "^7.9.0",
    "faker": "^5.1.0",
    "json-schema-faker": "^0.5.0-rcv.29",
    "maildev": "^1.1.0",
    "mocha": "^7.2.0",
    "mocha-parallel-tests": "^2.3.0",
    "mochawesome": "^6.1.1",
    "node-notifier": "^8.0.0",
    "npm-check": "^5.9.2",
    "nyc": "^15.1.0",
    "querystring": "^0.2.0",
    "rimraf": "^3.0.2",
    "rosie": "^2.0.1",
    "ts-loader": "^8.0.3",
    "ts-node-dev": "^1.0.0-pre.62",
    "typescript": "^4.0.2",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.3.12",
    "webpack-merge": "^5.1.4",
    "webpack-node-externals": "^2.5.2",
    "webpack-shell-plugin-next": "^1.2.0",
    "xml2json": "^0.12.0"
  },
  "scripts": {
    "git:sinit": "git submodule update --init --recursive --force",
    "git:sdiff": "git diff && git submodule foreach 'git diff'",
    "git:supdate": "git submodule update --remote --merge",
    "git:spush": "git push --recurse-submodules=on-demand",
    "git:sreset": "git submodule foreach 'git reset --hard'",
    "components:export": "node src/componentsExport.js",
    "start": "npm run start:prod",
    "prestart": "npm run build:prod",
    "start:dev": "npm run components:export && cross-env NODE_ENV=development ts-node-dev --files --max-old-space-size=4096 -- src/start.ts",
    "start:dev:debug": "npm run components:export && cross-env NODE_ENV=development ts-node-dev --files --max-old-space-size=4096 -- src/start.ts",
    "start:dev:prof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=development node -r source-map-support/register --prof -- dist/start.js",
    "start:dev:doctorprof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=development clinic doctor -- node -r source-map-support/register dist/start.js",
    "start:dev:flameprof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=development clinic flame -- node -r source-map-support/register dist/start.js",
    "start:dev:bubbleprof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=development clinic bubbleprof -- node -r source-map-support/register dist/start.js",
    "start:devbuild": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=development-build node -r source-map-support/register dist/start.js",
    "start:prod": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=production node -r source-map-support/register dist/start.js",
    "start:prod:prof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=production node -r source-map-support/register --prof dist/start.js",
    "start:prod:doctorprof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=production clinic doctor -- node -r source-map-support/register dist/start.js",
    "start:prod:flameprof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=production clinic flame -- node -r source-map-support/register dist/start.js",
    "start:prod:bubbleprof": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" NODE_ENV=production clinic bubbleprof -- node -r source-map-support/register dist/start.js",
    "start:email": "maildev --web 1080 --web-ip 127.0.0.1 --smtp 1025 --verbose --incoming-user evse-mail-user --incoming-pass evse-mail-pwd",
    "build": "npm run build:prod",
    "build:dev": "webpack --env dev",
    "build:prod": "webpack --env prod",
    "clean-install": "rimraf node_modules && rimraf package-lock.json && npm cache clear --force && npm install",
    "lint": "cross-env TIMING=1 eslint --ext .js,.ts build/types src test",
    "lint:fix": "cross-env TIMING=1 eslint --ext .js,.ts --fix build/types src test",
    "test": "cross-env TS_NODE_FILES=true mocha test/**/*Test.ts",
    "test:parallel": "cross-env TS_NODE_FILES=true mocha-parallel-tests test/**/*Test.ts",
    "test:charger": "cross-env TS_NODE_FILES=true mocha test/**/OCPP*Test.ts",
    "test:ocpi": "cross-env TS_NODE_FILES=true mocha test/**/OCPI*Test.ts",
    "test:tenant": "cross-env TS_NODE_FILES=true mocha test/**/*TenantTest.ts",
    "test:org": "cross-env TS_NODE_FILES=true mocha test/**/*OrgTest.ts",
    "test:setting": "cross-env TS_NODE_FILES=true mocha test/**/*SettingTest.ts",
    "test:cypher": "cross-env TS_NODE_FILES=true mocha test/**/CypherTest.ts",
    "test:user": "cross-env TS_NODE_FILES=true mocha test/**/UserTest.ts",
    "test:siteorg": "cross-env TS_NODE_FILES=true mocha test/**/SiteOrgTest.ts",
    "test:siteareaorg": "cross-env TS_NODE_FILES=true mocha test/**/SiteAreaOrgTest.ts",
    "test:transaction": "cross-env TS_NODE_FILES=true mocha test/**/TransactionTest.ts",
    "test:stat": "cross-env TS_NODE_FILES=true mocha test/**/StatisticsTest.ts",
    "test:auth": "cross-env TS_NODE_FILES=true mocha test/**/AuthenticationTest.ts",
    "test:ocpp": "cross-env TS_NODE_FILES=true mocha test/**/OCPP*Test.ts",
    "test:authentication": "cross-env TS_NODE_FILES=true mocha test/**/AuthenticationTest.ts",
    "test:createContext": "cross-env TS_NODE_FILES=true mocha test/**/ContextBuilderRunner.ts",
    "test:encryptionSetting": "cross-env TS_NODE_FILES=true mocha test/**/EncryptionSettingTest.ts",
    "test:filter": "cross-env TS_NODE_FILES=true mocha test/**/FilterTest.ts",
    "test:tenantsetting": "cross-env TS_NODE_FILES=true mocha test/**/ComponentActivationTenantTest.ts",
    "test:billing": "cross-env TS_NODE_FILES=true mocha test/**/BillingTest.ts",
    "test:asset": "cross-env TS_NODE_FILES=true mocha test/**/AssetTest.ts",
    "test:car": "cross-env TS_NODE_FILES=true mocha test/**/CarTest.ts",
    "test:locking": "cross-env TS_NODE_FILES=true mocha test/**/LockingTest.ts",
    "test:firmwareUpdateStatus": "cross-env TS_NODE_FILES=true mocha test/**/FirmwareUpdateStatusTest.ts",
    "test:smartCharging": "cross-env TS_NODE_FILES=true mocha test/**/SmartChargingTest.ts",
    "clinic:clean": "clinic clean",
    "npm-check": "npm-check",
    "import-sort": "npx import-sort-cli --write 'src/**/*.ts{,x}' 'test/**/*.ts{,x}' 'build/types/**/*.ts{,x}'"
  }
}
